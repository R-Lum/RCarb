% Test 2 LV404

handles.UB = 0.146; handles.UB_X = 0.001;
handles.TB = 0.027; handles.TB_X = 0.001;
handles.KB = 0.786; handles.KB_X = 0.008;
handles.UG = 0.113; handles.UG_X = 0.002;
handles.TG = 0.048; handles.TG_X = 0.002;
handles.KG = 0.245; handles.KG_X = 0.005;



load DATAek.txt; handles.DATAek = DATAek(2:end,2:end);
load DATAet.txt; handles.DATAet = DATAet(2:end,2:end);
load DATAeu.txt; handles.DATAeu = DATAeu(2:end,2:end);
load DATApk.txt; handles.DATApk = DATApk(2:end,2:end);
load DATApt.txt; handles.DATApt = DATApt(2:end,2:end);
load DATApu.txt; handles.DATApu = DATApu(2:end,2:end);
handles.WD = DATAek(2:end,ones(1,size(DATAek,1)-1));
handles.CD = handles.WD';
handles.TIMEMAX1 = 10;   %ka
load mejdahl.txt; handles.MEJ = mejdahl;

fclose('all');
fid = fopen('test2.txt','r');
if fid > 0
    tline = [deblank(fgetl(fid)),' '];
    I = find((double(tline) == 9) | (double(tline) == 32));
    handles.SAMP_NAME = cell(1);
    yes = 0;
    n = 0;
    while yes == 0
        n = n + 1;
        handles.SAMP_NAME(n) = {tline(1:I(1)-1)};
        tline = tline(I(1):end);
        I = find((double(tline) ~= 9) & (double(tline) ~= 32));
        if isempty(I)
            yes = 1;
        else
            tline = tline(I(1):end);
        end
        I = find((double(tline) == 9) | (double(tline) == 32));
    end
end
n = n - 1; 
handles.SAMP_NAME = handles.SAMP_NAME(2:end);

LINE = '[DATA] = textscan(fid,''%s';
for i = 1:n
    LINE = [LINE,'%f'];
end
LINE = [LINE,''');'];
eval(LINE);
handles.VAR = char(DATA{1});
handles.DATA = cell2mat(DATA(:,2:end))

for i = 1:size(handles.VAR,1)
    eval([handles.VAR(i,:),'=[',num2str(handles.DATA(i,:)),'];']);
end

%Step 1: Find U,Th,K values for sediment only (before carbonate dilution)
KA = K; UA = U; TA = T;
K = K.*(1+CC/100);
U = U.*(1+CC/100);
T = T.*(1+CC/100);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Step 2: Derive carbonate model
C = [ones(FINISH./STEP1,1).*CC/100;linspace(CC/100,1E-5,(ONSET-FINISH)/STEP1+1)';zeros((handles.TIMEMAX1-ONSET)/STEP1,1)+1E-5];
WC = [ones(FINISH./STEP1,1).*WCF/100;linspace(WCF/100,WCI/100,(ONSET-FINISH)/STEP1+1)';ones((handles.TIMEMAX1-ONSET)/STEP1,1).*WCI/100];
WF = C+WC;
WFA = WF(1)/100;
LEN = length(C);
TIME = [0:STEP1:handles.TIMEMAX1];

%Step 3: Derive linear uptake mode of uranium (code from Forbes Quarry work)  

%Step 4: Calaculate time-dependent dose rate
MK = 1-exp(interp1(log(handles.MEJ(:,1)),log(handles.MEJ(:,2)),log(DIAM/1000)));
MT = 1-exp(interp1(log(handles.MEJ(:,1)),log(handles.MEJ(:,3)),log(DIAM/1000)));
MU = 1-exp(interp1(log(handles.MEJ(:,1)),log(handles.MEJ(:,4)),log(DIAM/1000)));

XKB = griddata(log(handles.WD),log(handles.CD),handles.DATAek,log(WC),log(C));
XTB = griddata(log(handles.WD),log(handles.CD),handles.DATAet,log(WC),log(C));
XUB = griddata(log(handles.WD),log(handles.CD),handles.DATAeu,log(WC),log(C));
XKG = griddata(log(handles.WD),log(handles.CD),handles.DATApk,log(WC),log(C));
XTG = griddata(log(handles.WD),log(handles.CD),handles.DATApt,log(WC),log(C));
XUG = griddata(log(handles.WD),log(handles.CD),handles.DATApu,log(WC),log(C));
XKB = griddata(log(handles.WD),log(handles.CD),handles.DATAek,log(WC),log(C));

XKBA = 1.25;
XTBA = 1.25;
XUBA = 1.25;
XKGA = 1.14;
XTGA = 1.14;
XUGA = 1.14;

DRKB = MK.*K.*handles.KB./(1 + XKB.*WF);
DRTB = MT.*T.*handles.TB./(1 + XTB.*WF);
DRUB = MU.*U.*handles.UB./(1 + XUB.*WF);
DRKG = 1.*K.*handles.KG./(1 + XKG.*WF);
DRTG = 1.*T.*handles.TG./(1 + XTG.*WF);
DRUG = 1.*U.*handles.UG./(1 + XUG.*WF);

DRKBA = MK.*KA.*handles.KB./(1 + XKBA.*WFA);
DRTBA = MT.*TA.*handles.TB./(1 + XTBA.*WFA);
DRUBA = MU.*UA.*handles.UB./(1 + XUBA.*WFA);
DRKGA = 1.*KA.*handles.KG./(1 + XKGA.*WFA);
DRTGA = 1.*TA.*handles.TG./(1 + XTGA.*WFA);
DRUGA = 1.*UA.*handles.UG./(1 + XUGA.*WFA);

DR = DRKB + DRTB + DRUB + DRKG + DRTG + DRUG + COSMIC + INTERNAL;
DRA = DRKBA + DRTBA + DRUBA + DRKGA + DRTGA + DRUGA + COSMIC + INTERNAL

%Step 5: Calculate date
CUMDR = cumsum([0;(DR(1:end-1)+DR(2:end)).*STEP1./2]);
AGE = interp1(CUMDR,TIME',DE);
AGEA = DE./DRA;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

DEN = DE;
DRN = DR;
CUMDRN = CUMDR;
AGEN = AGE;


% plot them
MAXAGE = ceil(AGEN/50*STEP1)*50*STEP1;

DRmean = mean(DR_')' ;
DRdiff = DR_ - DRmean(:,ones(1,ERROR));
for i = 1:length(TIME)
    I = find(DRdiff(i,:) == 0); I1 = find(DRdiff(i,:) > 0); I2 = find(DRdiff(i,:) < 0);
    DR1 = [DRdiff(i,I),DRdiff(i,I1),-DRdiff(i,I1)];
    DR2 = [DRdiff(i,I),DRdiff(i,I2),-DRdiff(i,I2)];
    ST1(i,1) = DRmean(i)+std(DR1);
    ST2(i,1) = DRmean(i)-std(DR2);
end    
plot(TIME,DRN,'b',TIME,ST1,'b--',TIME,ST2,'b--')
xlabel('Time (ka)')
ylabel('Dose rate (Gy/ka)')
title(['Sample ',SAMNAME])
V = axis;
axis([V(1) MAXAGE V(3) V(4) ]);


CUMDRmean = mean(CUMDR_')'; 
CUMDRdiff = CUMDR_ - CUMDRmean(:,ones(1,ERROR));
for i = 1:length(TIME)
    I = find(CUMDRdiff(i,:) == 0); I1 = find(CUMDRdiff(i,:) > 0); I2 = find(CUMDRdiff(i,:) < 0);
    CUMDR1 = [CUMDRdiff(i,I),CUMDRdiff(i,I1),-CUMDRdiff(i,I1)];
    CUMDR2 = [CUMDRdiff(i,I),CUMDRdiff(i,I2),-CUMDRdiff(i,I2)];
    ST1(i,1) = CUMDRmean(i)+std(CUMDR1);
    ST2(i,1) = CUMDRmean(i)-std(CUMDR2);
end
plot(TIME,CUMDRN,'b',TIME,ST1,'b--',TIME,ST2,'b--',...
     [0 AGEN],[DEN DEN],'r',[AGEN AGEN],[0 DEN],'r',...
     [0 AGEN+std(AGE_)],[DEN+std(DE_) DEN+std(DE_)],'r--',...
     [AGEN+std(AGE_) AGEN+std(AGE_)],[0 DEN+std(DE_)],'r--',...
     [0 AGEN-std(AGE_)],[DEN-std(DE_) DEN-std(DE_)],'r--',...
     [AGEN-std(AGE_) AGEN-std(AGE_)],[0 DEN-std(DE_)],'r--')
xlabel('Time (ka)')
ylabel('Absorbed dose during deposition (Gy)')
title(['Sample ',SAMNAME])
V = axis;
MAXDOSE = ceil(interp1(TIME,ST1,MAXAGE)/10)*10;
axis([V(1) MAXAGE V(3) MAXDOSE ])